Bootstrap: debootstrap
MirrorURL: http://archive.ubuntu.com/ubuntu/
OSVersion: xenial
Include: software-properties-common
%post
	# --- Installation of pre-requisite packages ---
	apt-get update -y 
	apt-get install -y wget vim apt-utils

	# Add repositories
	apt-get install software-properties-common
	# apt-add-repository -s ppa:kernsuite/kern-2
	apt-add-repository -s ppa:kernsuite/kern-3
	apt-add-repository multiverse
	apt-add-repository restricted
	apt-get update -y
	
	# Packages
	apt-get install -y libqt4-dev gfortran python-numpy liblapacke-dev libboost-dev liblapack-dev liblapack3 liblapacke libxerces-c-dev libncurses5-dev libboost-python-dev libboost-regex-dev libboost-program-options-dev libboost-thread-dev libboost-serialization-dev libboost-filesystem-dev libboost-system-dev libdbus-1-dev libdbus-c++-dev libdbus-cpp-dev libxslt1-dev libreadline-dev libxml2-dev software-properties-common ant antlr libantlr-dev libantlr-java pgplot5 libcfitsio3-dev tix tix-dev qt4-dev-tools libqwt5-qt4-dev libjdom1-java libjfreechart-java libblas-dev scons cmake libhdf5-serial-dev flex libboost-all-dev python-foolscap xvfb subversion bison python-matplotlib ipython python-nose python2.7 python-dev python-scipy python-pip libboost-regex1.58.0 libwcs5 libqt4-dbus libqwt6abi1 libpgsbox5 libpgsbox-dev libxerces-c3.1 libsqlite3-0 swig libdbus-c++-1-0v5 libboost-program-options1.58.0 libgsl2 liblog4cxx-dev libcfitsio2 libboost-filesystem1.58.0 libboost-system1.58.0 libboost-python1.58.0 libxslt1.1 dbus-x11 libdbus-glib-1-2 libdbusmenu-glib4 python-dbus python-numpy-dev
	apt-get install -y wcslib-dev doxygen libeigen3-dev unzip libpgsbox-dev libgsl-dev libqwt-dev
	apt-get install -y sqlite3-doc sqlite3 libsqlite3-dev libsqlite3-0 git
	apt-get install -y libfftw3-single3 libfftw3-double3 libfftw3-dev

	# --- Configure environment in container ---
	export LC_ALL=C

	#From Kern-2
	apt-get install -y rpfits

	pip install --upgrade pip
	/usr/local/bin/pip install jupyter

	export CASAROOT=/usr/local/casa
	
	mkdir -p $CASAROOT
	echo $CASAROOT
	cd $CASAROOT

	export HOST_CPU_CORES=1
	export CASA_BUILD_TYPE=Release
	export CASA_ARCH=linux64  #linux_gnu
	export CASAPATH="$CASAROOT $CASA_ARCH"

	# --- Get code and data ---
	
	git clone -b release/5.1.1 https://open-bitbucket.nrao.edu/scm/casa/casa.git $CASAROOT
	git submodule update --init casacore
	svn co https://svn.cv.nrao.edu/svn/casa-data/distro $CASAROOT/data
	git clone https://open-bitbucket.nrao.edu/scm/casa/casa-asap.git $CASAROOT/asap

	mkdir $CASAROOT/externals 
	cd $CASAROOT/externals

	# --- Build libsakura --- 
	git clone https://github.com/grimmer0125/libsakura
	#wget ftp://alma-dl.mtk.nao.ac.jp/sakura/releases/latest_src/libsakura-4.0.2065.tar.gz
	#tar -xvf libsakura-4.0.2065.tar.gz

	#wget gtest-1.7.0.zip -L https://github.com/google/googletest/archive/release-1.7.0.zip
	wget https://github.com/google/googletest/archive/release-1.7.0.tar.gz
	tar -xvf release-1.7.0.tar.gz
	
	#unzip gtest-1.7.0.zip -d libsakura > /dev/null
	#unzip release-1.7.0.zip
	
	cd libsakura/
	ln -s /usr/local/casa/externals/googletest-release-1.7.0/ gtest
	# fix problem due to compiler version error (change 'isnan' to 'std::isnan')
	sed -i -e "s/std::isnan/isnan/g" test/statistics.cc
	sed -i -e "s/isnan/std::isnan/g" test/statistics.cc
	mkdir -p build
	cd build
	cmake ..
	make
	make apidoc
	make install


	# --- Build CasaCORE ---
	cd $CASAROOT/casacore; mkdir build; cd build	
	cmake .. -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DBoost_NO_BOOST_CMAKE=1 -DCASA_BUILD=1 -DUseCasacoreNamespace=1 -DBUILD_PYTHON=1 -DDATA_DIR=$CASAROOT/data -DCFITSIO_INCLUDE_DIR=/usr/include -DCXX11=1
	make -j $HOST_CPU_CORES &> compileLink.log || cat compileLink.log | strings | grep Error compileLink.log | grep -v Scanning | grep -v Building | grep -v Built | grep -v Linking
	make test &> test.log || cat test.log | strings | grep Failed test.log
	make install &> install.log || grep Error install.log  | grep -v Installing | grep -v Up-to-date | grep -v tFITSErrorImage


	# --- Build Casa Code ---
	cd $CASAROOT/code/
	wget https://raw.githubusercontent.com/grimmer0125/tmp/master/casacodereduce3.diff
	git apply casacodereduce3.diff
	mkdir build -p
	cd build	
	#cmake .. -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DUSE_ALMAWVR=True -DINTERACTIVE_ITERATION=1 -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH 2>&1 | tee cmake.log
	cmake .. -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DUseCrashReporter=0 -DBoost_NO_BOOST_CMAKE=1 '-DEXTRA_C_FLAGS=-DPG_PPU' -DUseCasacoreNamespace=1 -DUSE_ALMAWVR=True -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH 2>&1 | tee cmake.log
	cp /usr/local/casa/externals/release-1.7.0.tar.gz /usr/local/casa/code/build/gtest/googletest-release-1.7.0.tar.gz
	make -j $HOST_CPU_CORES &> compileLink.log || cat compileLink.log | strings | grep Error compileLink.log | grep -v Scanning | grep -v Building | grep -v Built | grep -v Linking
	make test &> test.log || cat test.log | strings | grep Failed test.log
	sudo make install &> install.log || grep Error install.log  | grep -v Installing | grep -v Up-to-date | grep -v tFITSErrorImage


	# ================================================================================
	
	# --- Build GCWrap ---
	source $CASAROOT/casainit.sh
	cd $CASAROOT/gcwrap; mkdir build; cd build
	cmake .. -Darch=$CASA_ARCH -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DPYTHON_LIBNAME=2.7 -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DUseCrashReporter=0 2>&1 | tee cmake.log
	cmake .. -Darch=$CASA_ARCH -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DPYTHON_LIBNAME=2.7 -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DUseCasacoreNamespace=1 -DCASA_BUILD=1 
	cmake .. -Darch=$CASA_ARCH -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DPYTHON_LIBNAME=2.7 -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DCASA_BUILD=1 -DUseCrashReporter=0
	# Note: cmake error created if including -DINTERACTIVE_ITERATION=1 in above due to leaving it out in casacode, may need to go back and turn it on in casacode if it turns out to be essential - relates to synthesis imaging 
	make -j $HOST_CPU_CORES &> compileLink.log || cat compileLink.log | strings | grep Error compileLink.log | grep -v Scanning | grep -v Building | grep -v Built | grep -v Linking
	make install &> install.log || grep Error install.log  | grep -v Installing | grep -v Up-to-date


	# --- Build ASAP ---
	cd $CASAROOT/asap; mkdir build; cd build
	cmake .. -Darch=$CASA_ARCH -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DPYTHON_LIBNAME=2.7 -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE 2>&1 | tee cmake.log
	make -j $HOST_CPU_CORES &> compileLink.log || cat compileLink.log | strings | grep Error compileLink.log | grep -v Scanning | grep -v Building | grep -v Built | grep -v Linking
	make test &> test.log || cat test.log | strings | grep Failed test.log
	make install &> install.log || grep Error install.log  | grep -v Installing | grep -v Up-to-date | grep -v tFITSErrorImage


	# --- Post-Build Tasks ---
	export CASAPATH="$CASAROOT $CASA_ARCH"
	source ${CASAROOT}/casainit.sh
	sed -i -e "s/usr\/lib64\/casapy/usr/" $CASAROOT/linux64/bin/casa
	sed -i -e "s/2\.6/2\.7/" $CASAROOT/linux64/bin/casa


	# --- Jupyter Setup --- 	
	groupadd -g 1000 jupyter
	useradd -u 1000 -m -g jupyter jupyter
	
	mkdir -p /home/jupyter/.jupyter
	mkdir -p /home/jupyter/.local/lib/python2.7/site-packages/casapy
	mkdir -p /home/jupyter/.local/share/jupyter/kernels/casapy
	mkdir -p /home/jupyter/.local/share/jupyter/runtime
	mkdir -p /home/jupyter/.local/share/jupyter/nbextensions

	cd /home/jupyter/

	git clone https://github.com/idia-astro/idia-container-casakernel.git

	cp idia-container-casakernel/python/casapy_kernel/* /home/jupyter/.local/lib/python2.7/site-packages/casapy
	cp idia-container-casakernel/jupyter/kernels/casapy/kernel.json /home/jupyter/.local/share/jupyter/kernels/casapy/
	cp idia-container-casakernel/python/jupyter_notebook_config.py /home/jupyter/.jupyter/
	cp idia-container-casakernel/python/create_font_cache.py /home/jupyter/

	# Bind through IDIA volumes to the container
	mkdir /users /scratch /data

	# run create_font_cache.py after files are copied to build font cache
	python /home/jupyter/create_font_cache.py 


%files
	# Copy local casapy and jupyter kernel files to the container
	files/casapy/ /home/jupyter/.local/lib/python2.7/site-packages/
	files/kernel.json /home/jupyter/.local/share/jupyter/kernels/casapy
	files/jupyter_notebook_config.py /home/jupyter/.jupyter
	files/create_font_cache.py /home/jupyter/

%environment
	export PYTHONPATH="/home/jupyter/.local/lib/python2.7/site-packages/:/usr/local/lib/python2.7/site-packages:/usr/local/casa/linux64/python/2.7"
	export LD_LIBRARY_PATH="/usr/local/casa/linux64/lib"
	export CASAPATH="/usr/local/casa/ linux64"
	export PATH="/usr/local/casa/linux64/bin:$PATH"
	QT_X11_NO_MITSHM=1
	export LC_ALL=C
	# OpenMP is used to parallelize certain parts of the imaging code and will use, by 
	# default, all the available cores on a given machine. Performance has declining  
	# returns and can cause memory issues, use OMP_NUM_THREADS to limit the number of 
	# cores used by OMP.  
	export OMP_NUM_THREADS=4

%runscript 
	#!/bin/sh
	exec /bin/bash "$@"