Bootstrap: debootstrap
MirrorURL: http://archive.ubuntu.com/ubuntu/
OSVersion: bionic
Include: software-properties-common
%post
	# --- Installation of pre-requisite packages ---
	apt-get update -y 
	apt-get install -y wget vim apt-utils

	# Add repositories
	apt-get install software-properties-common
	add-apt-repository -s ppa:kernsuite/kern-5
	apt-add-repository multiverse 
	apt-add-repository restricted
	apt-get update

 	mkdir /users /scratch /data

	export LC_ALL=C
	export LC_CTYPE="en_US.UTF-8"

	# casaCORE requirements
	apt-get install -y build-essential cmake gfortran g++ libncurses5-dev libreadline-dev flex bison libblas-dev liblapacke-dev libcfitsio-dev wcslib-dev
	apt-get install -y libhdf5-serial-dev libfftw3-dev python-numpy-dev libboost-python-dev libpython2.7-dev 
	apt-get install -y python-pip git
	apt-get install -y libqt4-dev 
	apt-get install -y libantlr-java libjdom1-java libjfreechart-java libgsl-dev default-jre

	# casaCODE requirements
	apt-get install -y libboost-regex-dev libboost-program-options-dev libboost-thread-dev libboost-serialization-dev libboost-filesystem-dev libboost-system-dev pgplot5 ant antlr libantlr-dev libdbus-1-dev libdbus-c++-dev libxml2-dev libxslt1.1 libxslt1-dev libqwt-dev libsqlite3-dev
	
	# libsakura requirements
	apt-get install -y liblog4cxx-dev doxygen libeigen3-dev unzip
	
	# gcwrap requirements
	apt-get install -y swig

	# install MPI
# 	apt-get install -y openmpi-bin openmpi-common openssh-client openssh-server libopenmpi-dev libopenmpi2 libopenmpi-dev # libopenmpi-dbg
# 	apt-get install -y python-mpi4py
	
	# other requirements
	apt-get install -y python-numpy python-scipy python-matplotlib python-dbus subversion ipython

	#From Kern
	apt-get install -y --allow-unauthenticated rpfits

	pip install --upgrade pip
	/usr/local/bin/pip install jupyter

    # isntall resource profiler tool
    pip install sshtunnel pymongo psutil
    pip install git+https://github.com/idia-astro/benchmark.git#egg=benchmark


	# --- Configure environment in container ---
	export CASAROOT=/usr/local/casa
	export HOST_CPU_CORES=8
	export CASA_BUILD_TYPE=Release
	export CASA_ARCH=linux64  #linux_gnu
	export CASAPATH="$CASAROOT $CASA_ARCH"

	mkdir -p $CASAROOT

	git clone --recursive https://vsuorant@open-bitbucket.nrao.edu/scm/casa/casa.git $CASAROOT

	# Minimal copy of CASA data ()
	# Need to install git LFS to download casa-data repo (https://github.com/git-lfs/git-lfs/wiki/Installation)
	apt-get install -y git-lfs
	git lfs install
	git clone --no-checkout https://open-bitbucket.nrao.edu/scm/casa/casa-data.git $CASAROOT/data
	cd $CASAROOT/data
	git show HEAD:distro | bash

	# Clean out files from container
	rm -rf .git ../git

	mkdir -p $CASAROOT/externals

	# Default libxerces in 18.04 is too new for casa code, use older version
	cd $CASAROOT/externals
	wget http://launchpadlibrarian.net/344856440/libxerces-c3.1_3.1.4+debian-2build2_amd64.deb
    wget http://launchpadlibrarian.net/344856431/libxerces-c-dev_3.1.4+debian-2build2_amd64.deb
    dpkg -i libxerces-c3.1_3.1.4+debian-2build2_amd64.deb
    dpkg -i libxerces-c-dev_3.1.4+debian-2build2_amd64.deb

	# --- Build CasaCORE ---
	cd $CASAROOT/casacore/; mkdir build; cd build
	cmake .. -DCASA_BUILD=ON -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DBUILD_PYTHON=ON -DDATA_DIR=$CASAROOT/data -DCFITSIO_INCLUDE_DIR=/usr/include -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DBUILD_TESTING=OFF -DBoost_NO_BOOST_CMAKE=1 -DCMAKE_FIND_ROOT_PATH=$(CASAROOT)/$(ARCH) -DCXX11=1 
	make -j $HOST_CPU_CORES
	make install


	# - External Build Requirements -	
	mkdir $CASAROOT/externals 
	cd $CASAROOT/externals
	
	# Build libsakura 
	git clone https://github.com/grimmer0125/libsakura
	wget https://github.com/google/googletest/archive/release-1.7.0.tar.gz
	tar -xvf release-1.7.0.tar.gz

	cd libsakura/
	ln -s /usr/local/casa/externals/googletest-release-1.7.0/ gtest
	# fix problem due to compiler version error (change 'isnan' to 'std::isnan')
	sed -i -e "s/std::isnan/isnan/g" test/statistics.cc
	sed -i -e "s/isnan/std::isnan/g" test/statistics.cc
	mkdir -p build; cd build
	cmake ..
	make
	make apidoc
	make install


	# --- Compile CasaCode ---
	cd $CASAROOT/code/; mkdir build -p; cd build	

	# Install breakpad from google
	mkdir gtest breakpad
	cp /usr/local/casa/externals/release-1.7.0.tar.gz /usr/local/casa/code/build/gtest/googletest-release-1.7.0.tar.gz
	cd breakpad
    wget https://casa.nrao.edu/download/devel/breakpad/breakpad-from-google-180213-patch2.tgz
    wget https://casa.nrao.edu/download/devel/breakpad/breakpad-from-google-180213-patch3.tgz
    tar zxvf breakpad-from-google-180213-patch2.tgz
    cd ..
	cmake ..  -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DUseCcache=0 -DUseCrashReporter=0 -DCXX11=1 -Darch=$CASA_ARCH -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DEXTRA_C_FLAGS=-DPG_PPU -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DCMAKE_FIND_ROOT_PATH=$CASAROOT/$CASA_ARCH -DBoost_NO_BOOST_CMAKE=1
	make -j $HOST_CPU_CORES
	make install


	# Build GCWrap
	cd $CASAROOT/gcwrap; mkdir build; cd build
	cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DUseCcache=0 -DUseCrashReporter=0 -Darch=$(ARCH) -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$CASAROOT/$CASA_ARCH -DCMAKE_FIND_ROOT_PATH=$CASAROOT/$CASA_ARCH -DCXX11=1 -DBoost_NO_BOOST_CMAKE=1
	make -j $HOST_CPU_CORES
	make install
	cd $CASAROOT


	# Post-install tasks
	source $CASAROOT/casainit.sh
	export CASAROOT=/usr/local/casa
	export CASA_ARCH=linux64
	export CASAPATH="$CASAROOT $CASA_ARCH"
	source ${CASAROOT}/casainit.sh
	sed -i -e "s/usr\/lib64\/casapy/usr/" $CASAROOT/linux64/bin/casa
	export CASAPATH="$CASAROOT $CASA_ARCH"

    # Insert IDIA casatasks and casakern
#     git clone https://github.com/idia-astro/idia-container-casakernel.git jupyter_casa_files
#     cd jupyter_casa_files/python/casa/
#     cp casatasks.py $CASAROOT/linux64/lib/python2.7/
#     cp casa_stack_manip.py $CASAROOT/linux64/lib/python2.7/


	# Clean container and free space
    cd $CASAROOT
	rm -rf code/build
	rm -rf gcWrap \
    rm -rf casa-asap \
    rm -rf code 
    rm -rf externals/libsakura/build


%environment
	# Custom environment shell code should follow
	export LC_ALL=C
	export CASAROOT=/usr/local/casa
	export CASA_ARCH=linux64
	export PYTHONPATH="$CASAROOT/$CASA_ARCH/lib/python2.7/:$PYTHONPATH"
	export PATH="$CASAROOT/$CASA_ARCH/bin:$PATH"
	export LD_LIBRARY_PATH="$CASAROOT/$CASA_ARCH/lib:$LD_LIBRARY_PATH"
	export CASAPATH="$CASAROOT $CASA_ARCH"
	QT_X11_NO_MITSHM=1
	unset XDG_RUNTIME_DIR

%runscript
	#!/bin/sh
	/usr/bin/python "$@"